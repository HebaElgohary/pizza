// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id @default(cuid())
  email         String           @unique
  password      String
  name          String
  image         String?
  phone         String?
  streetAddrees String?
  postalCode    String?
  city          String?
  country       String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  orders        OrderedProduct[]
}

model Product {
  id          String           @id @default(cuid())
  name        String
  description String
  img         String
  order       Int              @default(autoincrement())
  basePrice   Float
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  sizes       Size[]
  extras      Extra[]
  category    Category         @relation(fields: [categoryId], references: [id])
  categoryId  String
  orders      OrderedProduct[]
}

model Size {
  id          String       @id @default(cuid())
  name        ProductSizes
  price       Float
  productSize Product      @relation(fields: [productId], references: [id])
  productId   String

  @@unique([productId, name])
}

enum ProductSizes {
  SMALL
  MEDUIM
  LARGE
}

enum ProductExtras {
  CHEESE
  ONION
  POTATO
}

model Extra {
  id           String        @id @default(cuid())
  name         ProductExtras
  price        Float
  productExtra Product       @relation(fields: [productId], references: [id])
  productId    String

  @@unique([name, productId])
}

model Category {
  id       String    @id @default(cuid())
  name     String
  order    Int       @default(autoincrement())
  products Product[]
}

model Order {
  id       String           @id @default(cuid())
  name     String
  order    Int
  products OrderedProduct[]
}

model OrderedProduct {
  id       String @id @default(cuid())
  quantity Int

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}
